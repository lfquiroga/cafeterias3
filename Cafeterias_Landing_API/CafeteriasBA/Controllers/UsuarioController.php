<?phpnamespace CafeteriasBA\Controllers;use CafeteriasBA\Core\View;use CafeteriasBA\Models\Hash;use CafeteriasBA\Models\Usuario as Usuario;use CafeteriasBA\Session\Session;use CafeteriasBA\Validation\Validation;class UsuarioController {    // TODO: LLAMAR METODOS    /**     * funcion GetAll, llama al modelo usuario que realiza el GetAll de los usuarios.     */    public static function getAll() {        $usuarios = Usuario::getAll();        $salida = [                    'status' => 1,                    'data' => $usuarios        ];        View::render($salida);    }    /**     * function para Login de usuario.     * @param $data     */    public static function Login($data) {                //TODO: VALIDAR LOS DATOS EXISTAN.        if (isset($data['email']) && isset($data['password'])) {                        $email = $data['email'];                        $passwd     = $data['password'];                        $usuario = new Usuario();            $usuario  = Usuario::getByEmail($email);            if($usuario == null)            {                $output = [                    "status" => 0,                    "mensaje" => 'El email ingresado no se encuentra registrado.',                    "data" => 'email'                ];                View::render($output);            }else            {                $verify = Hash::VerifyHash($passwd, $usuario->getPass());                if ($verify === true) {                             $email  = $usuario->getEmail();                $rol    = $usuario->getFkRolUsuario();                $id     = $usuario->getId();                $output = [                    "status" => 1,                    "mensaje" => 'Usuario autenticado.',                    "data" => $usuario                ];                  if($rol == 1)                {                 Session::set('Admin',1);                }                Session::set('Usuario', $email);                Session::set('Id', $id);                Session::setcookie('Usuario',$email);                Session::set('Rol', $rol);                View::render($output);                } else {                $output = [                    "status" => 0,                    "mensaje" => 'la contraseÃ±a no coincide.',                    "data" => 'passwd'                ];                View::render($output);                }                        }                 }         else         {            $output = [                "status" => 0,               "mensaje" => 'Existen campos vacios, por favor completarlos.',               "data" => 'general'            ];            View::render($output);        }    }    /**     *      * @param $data     * funcion que se llamara al realizar un registro      *      */    public static function Register($data) {          $mailenuso =  Usuario::findByEmail($data['email']) ;        if($mailenuso){            $salida = [                'status' => 0,                'mensaje' =>'El mail que ingreso ya esta en uso.',                'data' => 'email'             ];            View::render($salida);        }else{            $usuario = Usuario::registrarUsuario($data);            View::render($usuario);        }    }    /**     * @param $data     * @throws \Exception     * funcion crear usuario. Se llama al realizar un Alta en el CPANEL adminsitrador. si falla devuelve excepcion.     */    public static function Create($data) {        $producto = Usuario::crearUsuario($data);        $salida = [                    'status' => 1,                    'data' => $producto        ];        View::render($salida);    }    /**     * @param $data     * funcion para la edicion del usuario.     */    public static function Update($data) {        $producto = Usuario::editarUsuario($data);        $salida = [                    'status' => 1,                    'data' => $producto        ];        View::render($salida);    }    /**     * @param $id     * funcion para ver el detalle del usuario seleccionado.     */    public static function getById($id) {                $producto = Usuario::verUsuario($id);                $salida = [                    'status' => 1,                    'data' => $producto        ];                View::render($salida);    }    /**     * @param $id     * funcion para el borrado logico en la base de datos del usuario seleccionado.     */    public static function Delete($id) {        $producto = Usuario::eliminarUsuario($id);        $salida = [                    'status' => 1,                    'data' => $producto        ];        View::render($salida);    }    public static function getByEmail($email)    {        $usuario = Usuario::getByEmail($email);        Session::set('UserData', $usuario);         View::render($email);    }}